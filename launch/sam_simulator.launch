<launch>
    <!-- Configurable arguments -->
    <arg name="robot_name" default="sam_auv"/>
    <arg name="enable_gui" default="true"/>
    <arg name="xacro_file" default="$(find sam_stonefish_sim)/data/urdf/sam_auv.urdf.xacro"/>
    <arg name="scenario_description" value="$(find sam_stonefish_sim)/data/scenarios/sam_biograd.scn"/>
    <arg name="latitude" default="43.93183"/>
    <arg name="longitude" default="15.44264"/>

    <arg name="server_addr" default="127.0.0.1"/>
    <arg name="server_port" default="6002"/>
    <arg name="system_name" default="$(arg robot_name)"/>
    <arg name="imc_id" default="5"/>

     <!-- Static transform -->
    <node pkg="tf" type="static_transform_publisher" name="world_utm_broadcaster" args="535529 4864397 0 0 0 0 1 world_utm world_local 100" />
    <node pkg="tf" type="static_transform_publisher" name="world_local_broadcaster" args="0 0 0 0 0 0 1 world_local world 100" />
    <node pkg="tf" type="static_transform_publisher" name="world2ned" args="0 0 0 0 0 3.1415 world world_ned 100"/>

    <node pkg="rostopic" type="rostopic" name="fake_gps_fix"
          args="pub /gps/fix sensor_msgs/NavSatFix --latch
          '{header: {seq: 999, stamp: {secs: 0, nsecs: 0}, frame_id: 'world_local'},
            status: {status: 0, service: 1},
            latitude: $(arg latitude),
            longitude: $(arg longitude),
            altitude: 0,
            position_covariance: [3.9561210000000004, 0.0, 0.0, 0.0, 3.9561210000000004, 0.0, 0.0, 0.0, 7.650756],
            position_covariance_type: 2}'" output="screen"/>

    <!-- Run Simulator -->
    <include file="$(find sam_stonefish_sim)/launch/simulator.launch">
    	<arg name="simulation_data" value="$(find sam_stonefish_sim)/data"/>
    	<arg name="scenario_description" value="$(arg scenario_description)"/>
   		<arg name="simulation_rate" value="100.0"/>
    	<arg name="graphics_resolution" value="1200 800"/>
    	<arg name="graphics_quality" value="medium"/>
        <arg name="robot_name" value="$(arg robot_name)"/>
    </include>

    <!-- Robot description -->
    <param name="$(arg robot_name)/robot_description" command="$(find xacro)/xacro --inorder '$(arg xacro_file)' debug:=true robot_namespace:=$(arg robot_name)"/>

    <!-- Robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
      <remap from="joint_states" to="$(arg robot_name)/joint_states"/>
      <remap from="robot_description" to="$(arg robot_name)/robot_description"/>
    </node>

    <!--
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen">
      <remap from="joint_states" to="$(arg robot_name)/desired_joint_states"/>
      <remap from="$(arg robot_name)/joint_states" to="$(arg robot_name)/dummy_joint_states"/>
      <remap from="robot_description" to="$(arg robot_name)/robot_description"/>
      <param name="use_gui" value="true"/>
      <param name="publish_default_positions" value="true"/>
    </node>
    <node name="sam_teleop" type="sam_teleop.py" pkg="sam_stonefish_sim" output="screen"/> 
    -->
    <node name="sam_sim_msg_bridge" type="sam_sim_msg_bridge.py" pkg="sam_stonefish_sim" output="screen"/>

    <node name="bezier_planner" type="bezier_planner.py" pkg="sam_stonefish_sim" output="screen">
        <param name="base_frame" value="sam_auv/base_link"/>
    </node>
    <include file="$(find sam_stonefish_sim)/launch/controller.launch"/>

    <!--
    <include file="$(find imc_ros_bridge)/launch/bridge.launch">
        <arg name="server_addr" value="$(arg server_addr)"/>
        <arg name="server_port" value="$(arg server_port)" type="str"/>
        <arg name="imc_system_name" value="$(arg system_name)"/>
        <arg name="imc_id" value="$(arg imc_id)"/>
    </include>

    <node name="neptus_bt" pkg="waypoints" type="neptus_bt.py" output="screen">
        <param name="system_name" value="$(arg system_name)" />
    </node>   
    -->
    
</launch>
